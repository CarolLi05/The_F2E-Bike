{"version":3,"sources":["all.js"],"names":["main_map","L","map","setView","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","accessToken","addTo","navigator","geolocation","getCurrentPosition","position","longitude","coords","latitude","console","log","getStationData","e","msg","code","dd","message","error","data","axios","method","url","headers","GetAuthorizationHeader","then","response","getAvailableData","filterData","availableData","forEach","availableItem","stationItem","StationUID","StationName","StationAddress","StationPosition","push","setMarker","AppID","AppKey","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","HMAC","getHMAC","Authorization","item","marker","PositionLat","PositionLon","bindPopup","Zh_tw","AvailableRentBikes","AvailableReturnBikes","bikeRoute","document","querySelector","getRoutesData","routeData","str","RouteName","innerHTML","addEventListener","value","target","myLayer","removeLayer","geo","Geometry","polyLine","wicket","Wkt","geojsonFeature","read","toJson","myStyle","geoJSON","style","addData","fitBounds","getBounds"],"mappings":"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","file":"all.js","sourcesContent":["\n//main map\nvar main_map = L.map('main_map').setView([51.505, -0.09], 13);\n\nL.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    maxZoom: 18,\n    id: 'mapbox/streets-v11',\n    tileSize: 512,\n    zoomOffset: -1,\n    accessToken: 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw' //'your.mapbox.access.token'\n}).addTo(main_map);\n\n//使用 navigator web api 獲取當下位置（經緯度）\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(\n    function (position) {\n      const longitude = position.coords.longitude;  // 經度\n      const latitude = position.coords.latitude;  // 緯度\n      console.log(longitude);\n      console.log(latitude);\n\n      // 重新設定 view 的位置\n      main_map.setView([latitude, longitude], 13);\n      // 將經緯度當作參數傳給 getData 執行\n      getStationData(longitude, latitude);\n    },\n    // 錯誤訊息\n    function (e) {\n      const msg = e.code;\n      const dd = e.message;\n      console.error(msg);\n      console.error(dd);\n    }\n  )\n}\n\n// 串接附近的自行車租借站位資料\nlet data = [];\nfunction getStationData(longitude, latitude) {\n  axios({\n    method: 'get',\n    // url: 'https://ptx.transportdata.tw/MOTC/v2/Bike/Station/Kaohsiung',\n    url: `https://ptx.transportdata.tw/MOTC/v2/Bike/Station/NearBy?$spatialFilter=nearby(${latitude},${longitude},500)`,\n    headers: GetAuthorizationHeader()\n  })\n    .then((response) => {\n      console.log('租借站位資料',response)\n      data = response.data;\n\n      getAvailableData(longitude, latitude);\n\n    })\n    .catch((error) => console.log('error', error))\n}\n\n// 串接附近的即時車位資料\nlet filterData = [];\nfunction getAvailableData(longitude, latitude) {\n  axios({\n    method: 'get',\n    // url: 'https://ptx.transportdata.tw/MOTC/v2/Bike/Availability/Kaohsiung',\n    url: `https://ptx.transportdata.tw/MOTC/v2/Bike/Availability/NearBy?$spatialFilter=nearby(${latitude},${longitude},500)`,\n    headers: GetAuthorizationHeader()\n  })\n    .then((response) => {\n      console.log('車位資料',response)\n      const availableData = response.data;\n    \n      // 比對\n      availableData.forEach((availableItem) => {\n        data.forEach((stationItem) => {\n          if (availableItem.StationUID === stationItem.StationUID) {\n            availableItem.StationName = stationItem.StationName\n            availableItem.StationAddress = stationItem.StationAddress\n            availableItem.StationPosition = stationItem.StationPosition\n            filterData.push(availableItem)\n          }\n        })\n      })\n      console.log('filterData', filterData)\n\n      setMarker();\n\n    })\n    .catch((error) => console.log('error', error))\n}\n// API 驗證用\nfunction GetAuthorizationHeader() {\n  var AppID = 'f39a6c1c7f8e472d900fbd5e1b7d3154';\n  var AppKey = 'd6Yw7er2vMOTmuvf7wrmpwf9Chs';\n\n  var GMTString = new Date().toGMTString();\n  var ShaObj = new jsSHA('SHA-1', 'TEXT');\n  ShaObj.setHMACKey(AppKey, 'TEXT');\n  ShaObj.update('x-date: ' + GMTString);\n  var HMAC = ShaObj.getHMAC('B64');\n  var Authorization = 'hmac username=\\\"' + AppID + '\\\", algorithm=\\\"hmac-sha1\\\", headers=\\\"x-date\\\", signature=\\\"' + HMAC + '\\\"';\n\n  return { 'Authorization': Authorization, 'X-Date': GMTString /*,'Accept-Encoding': 'gzip'*/ }; //如果要將js運行在伺服器，可額外加入 'Accept-Encoding': 'gzip'，要求壓縮以減少網路傳輸資料量\n}\n\n// 標記 icon\nfunction setMarker() {\n  filterData.forEach((item) => {\n    // console.log(item.StationPosition.PositionLon, item.StationPosition.PositionLat)\n    L.marker([item.StationPosition.PositionLat, item.StationPosition.PositionLon]).addTo(main_map).bindPopup(\n      `<div class=\"card\">\n            <div class=\"card-body\">\n            <h5 class=\"card-title\">${item.StationName.Zh_tw}</h5>\n            <h6 class=\"card-subtitle mb-2 text-muted\">${item.StationAddress.Zh_tw}</h6>\n            <p class=\"card-text mb-0\">可租借車數：${item.AvailableRentBikes}</p>\n            <p class=\"card-text mt-0\">可歸還車數：${item.AvailableReturnBikes}</p>\n            </div>\n        </div>`\n    )\n  })\n}\n\n// 選取自行車的路線\nconst bikeRoute = document.querySelector('#bikeRoute');\nfunction getRoutesData() {\n  axios({\n    method: 'get',\n    url: 'https://ptx.transportdata.tw/MOTC/v2/Cycling/Shape/Kaohsiung',\n    headers: GetAuthorizationHeader()\n  })\n    .then((response) => {\n      console.log('自行車的路線',response)\n      const routeData = response.data;\n\n      let str = '';\n      routeData.forEach((item) => {\n        str += `<option value=\"${item.RouteName}\">${item.RouteName}</option>`\n      })\n      bikeRoute.innerHTML = str;\n\n\n      bikeRoute.addEventListener('change', (e) => {\n        const value = e.target.value;\n        // console.log(value)\n        \n        if(myLayer) {\n          // console.log(myLayer);\n          main_map.removeLayer(myLayer);\n        }\n        \n        routeData.forEach((item) => {\n          // console.log(item)\n          if (item.RouteName === value) {\n            geo = item.Geometry;\n            // console.log(geo)\n            \n            // 畫線的方法\n            polyLine(geo);\n          }\n        })\n      })\n\n    })\n    .catch((error) => console.log('error', error))\n}\ngetRoutesData();\n\n// 畫出自行車的路線\nlet myLayer = null;\n\nfunction polyLine(geo) {\n  // 建立一個 wkt 的實體\n  const wicket = new Wkt.Wkt();\n  const geojsonFeature = wicket.read(geo).toJson()\n  \n  // 預設樣式\n  // myLayer = L.geoJSON(geojsonFeature).addTo(main_map);\n\n  const myStyle = {\n    \"color\": \"#ff0000\",\n    \"weight\": 5,\n    \"opacity\": 0.65\n  };\n  const myLayer = L.geoJSON(geojsonFeature, {\n    style: myStyle\n  }).addTo(main_map);\n\n\n  myLayer.addData(geojsonFeature);\n  // zoom the map to the layer\n  main_map.fitBounds(myLayer.getBounds());\n\n}"]}