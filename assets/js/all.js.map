{"version":3,"sources":["all.js"],"names":["main_map","L","map","setView","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","accessToken","addTo"],"mappings":";;AACA;AACA,IAAIA,QAAQ,GAAGC,CAAC,CAACC,GAAF,CAAM,UAAN,EAAkBC,OAAlB,CAA0B,CAAC,MAAD,EAAS,CAAC,IAAV,CAA1B,EAA2C,EAA3C,CAAf;AAEAF,CAAC,CAACG,SAAF,CAAY,oFAAZ,EAAkG;AAC9FC,EAAAA,WAAW,EAAE,0JADiF;AAE9FC,EAAAA,OAAO,EAAE,EAFqF;AAG9FC,EAAAA,EAAE,EAAE,oBAH0F;AAI9FC,EAAAA,QAAQ,EAAE,GAJoF;AAK9FC,EAAAA,UAAU,EAAE,CAAC,CALiF;AAM9FC,EAAAA,WAAW,EAAE,0FANiF,CAMU;;AANV,CAAlG,EAOGC,KAPH,CAOSX,QAPT,E,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA","file":"all.js","sourcesContent":["\n//main map\nvar main_map = L.map('main_map').setView([51.505, -0.09], 13);\n\nL.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    maxZoom: 18,\n    id: 'mapbox/streets-v11',\n    tileSize: 512,\n    zoomOffset: -1,\n    accessToken: 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw' //'your.mapbox.access.token'\n}).addTo(main_map);\n\n//使用 navigator web api 獲取當下位置（經緯度）\n// if (navigator.geolocation) {\n//   navigator.geolocation.getCurrentPosition(\n//     function (position) {\n//       const longitude = position.coords.longitude;  // 經度\n//       const latitude = position.coords.latitude;  // 緯度\n//       console.log(longitude);\n//       console.log(latitude);\n\n//       // 重新設定 view 的位置\n//       main_map.setView([latitude, longitude], 13);\n//       // 將經緯度當作參數傳給 getData 執行\n//       // getStationData(longitude, latitude);\n//     },\n//     // 錯誤訊息\n//     function (e) {\n//       const msg = e.code;\n//       const dd = e.message;\n//       console.error(msg);\n//       console.error(dd);\n//     }\n//   )\n// }\n\n// // 串接附近的自行車租借站位資料\n// let data = [];\n// function getStationData(longitude, latitude) {\n//   axios({\n//     method: 'get',\n//     // url: 'https://ptx.transportdata.tw/MOTC/v2/Bike/Station/Kaohsiung',\n//     url: `https://ptx.transportdata.tw/MOTC/v2/Bike/Station/NearBy?$spatialFilter=nearby(${latitude},${longitude},500)`,\n//     headers: GetAuthorizationHeader()\n//   })\n//     .then((response) => {\n//       console.log('租借站位資料',response)\n//       data = response.data;\n\n//       getAvailableData(longitude, latitude);\n\n//     })\n//     .catch((error) => console.log('error', error))\n// }\n// // 串接附近的即時車位資料\n// let filterData = [];\n// function getAvailableData(longitude, latitude) {\n//   axios({\n//     method: 'get',\n//     // url: 'https://ptx.transportdata.tw/MOTC/v2/Bike/Availability/Kaohsiung',\n//     url: `https://ptx.transportdata.tw/MOTC/v2/Bike/Availability/NearBy?$spatialFilter=nearby(${latitude},${longitude},500)`,\n//     headers: GetAuthorizationHeader()\n//   })\n//     .then((response) => {\n//       console.log('車位資料',response)\n//       const availableData = response.data;\n    \n//       // 比對\n//       availableData.forEach((availableItem) => {\n//         data.forEach((stationItem) => {\n//           if (availableItem.StationUID === stationItem.StationUID) {\n//             availableItem.StationName = stationItem.StationName\n//             availableItem.StationAddress = stationItem.StationAddress\n//             availableItem.StationPosition = stationItem.StationPosition\n//             filterData.push(availableItem)\n//           }\n//         })\n//       })\n//       console.log('filterData', filterData)\n\n//       setMarker();\n\n//     })\n//     .catch((error) => console.log('error', error))\n// }\n// // API 驗證用\n// function GetAuthorizationHeader() {\n//   var AppID = 'f39a6c1c7f8e472d900fbd5e1b7d3154';\n//   var AppKey = 'd6Yw7er2vMOTmuvf7wrmpwf9Chs';\n\n//   var GMTString = new Date().toGMTString();\n//   var ShaObj = new jsSHA('SHA-1', 'TEXT');\n//   ShaObj.setHMACKey(AppKey, 'TEXT');\n//   ShaObj.update('x-date: ' + GMTString);\n//   var HMAC = ShaObj.getHMAC('B64');\n//   var Authorization = 'hmac username=\\\"' + AppID + '\\\", algorithm=\\\"hmac-sha1\\\", headers=\\\"x-date\\\", signature=\\\"' + HMAC + '\\\"';\n\n//   return { 'Authorization': Authorization, 'X-Date': GMTString /*,'Accept-Encoding': 'gzip'*/ }; //如果要將js運行在伺服器，可額外加入 'Accept-Encoding': 'gzip'，要求壓縮以減少網路傳輸資料量\n// }\n\n// // 標記 icon\n// function setMarker() {\n//   filterData.forEach((item) => {\n//     // console.log(item.StationPosition.PositionLon, item.StationPosition.PositionLat)\n//     L.marker([item.StationPosition.PositionLat, item.StationPosition.PositionLon]).addTo(main_map).bindPopup(\n//       `<div class=\"card\">\n//     <div class=\"card-body\">\n//       <h5 class=\"card-title\">${item.StationName.Zh_tw}</h5>\n//       <h6 class=\"card-subtitle mb-2 text-muted\">${item.StationAddress.Zh_tw}</h6>\n//       <p class=\"card-text mb-0\">可租借車數：${item.AvailableRentBikes}</p>\n//       <p class=\"card-text mt-0\">可歸還車數：${item.AvailableReturnBikes}</p>\n//     </div>\n//   </div>`\n//     )\n//   })\n// }\n\n// // 選取自行車的路線\n// const bikeRoute = document.querySelector('#bikeRoute');\n// function getRoutesData() {\n//   axios({\n//     method: 'get',\n//     url: 'https://ptx.transportdata.tw/MOTC/v2/Cycling/Shape/Kaohsiung',\n//     headers: GetAuthorizationHeader()\n//   })\n//     .then((response) => {\n//       console.log('自行車的路線',response)\n//       const routeData = response.data;\n\n//       let str = '';\n//       routeData.forEach((item) => {\n//         str += `<option value=\"${item.RouteName}\">${item.RouteName}</option>`\n//       })\n//       bikeRoute.innerHTML = str;\n\n\n//       bikeRoute.addEventListener('change', (e) => {\n//         const value = e.target.value;\n//         // console.log(value)\n        \n//         if(myLayer) {\n//           // console.log(myLayer);\n//           main_map.removeLayer(myLayer);\n//         }\n        \n//         routeData.forEach((item) => {\n//           // console.log(item)\n//           if (item.RouteName === value) {\n//             geo = item.Geometry;\n//             // console.log(geo)\n            \n//             // 畫線的方法\n//             polyLine(geo);\n//           }\n//         })\n//       })\n\n//     })\n//     .catch((error) => console.log('error', error))\n// }\n// getRoutesData();\n\n// // 畫出自行車的路線\n// let myLayer = null;\n\n// function polyLine(geo) {\n//   // 建立一個 wkt 的實體\n//   const wicket = new Wkt.Wkt();\n//   const geojsonFeature = wicket.read(geo).toJson()\n  \n//   // 預設樣式\n//   // myLayer = L.geoJSON(geojsonFeature).addTo(main_map);\n\n//   const myStyle = {\n//     \"color\": \"#ff0000\",\n//     \"weight\": 5,\n//     \"opacity\": 0.65\n//   };\n//   const myLayer = L.geoJSON(geojsonFeature, {\n//     style: myStyle\n//   }).addTo(main_map);\n\n\n//   myLayer.addData(geojsonFeature);\n//   // zoom the map to the layer\n//   main_map.fitBounds(myLayer.getBounds());\n\n// }"]}